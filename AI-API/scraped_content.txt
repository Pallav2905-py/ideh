Python | Multiple Face Recognition using dlib - GeeksforGeeks
Skip to content
Courses
Get IBM Certifications
Complete Machine Learning & Data Science Program
Data Science Training Program
Data Analytics Training using Excel, SQL, Python & PowerBI
Complete Data Analytics Program
DSA to Development
For Working Professionals
Data Structure & Algorithm Classes (Live)
System Design (Live)
JAVA Backend Development(Live)
DevOps(Live)
Data Structures & Algorithms in Python
For Students
Interview Preparation Course
GATE CS & IT 2025
Data Science (Live)
Data Structure & Algorithm-Self Paced(C++/JAVA)
Master Competitive Programming(Live)
Full Stack Development with React & Node JS(Live)
All Courses
Full Stack Development
Data Science Program
Tutorials
Python Tutorial
Taking Input in Python
Python Operators
Python Variables
Data Types
Loops in Python
Python Functions
Python OOPS Concept
DSA in Python
Python Exercises
Web Development in Python
Django
Flask
Postman
Web Scrapping in Python
Data Structures & Algorithms
Data Structures
Arrays
Matrix
Strings
Linked List
Stack
Queue
Binary Tree
Binary Search Tree
Heap
Hashing
Graph
Advanced Data Structure
Algorithms
Analysis of Algorithms
Searching Algorithms
Sorting Algorithms
Greedy Algorithms
Dynamic Programming
Graph Algorithms
Recursion
Backtracking
Divide and Conquer
Mathematical Algorithms
Geometric Algorithms
Bitwise Algorithms
Randomized Algorithms
Complete DSA Tutorial
Company Wise SDE Sheets
Facebook SDE Sheet
Amazon SDE Sheet
Apple SDE Sheet
Netflix SDE Sheet
Google SDE Sheet
Wipro Coding Sheet
Infosys Coding Sheet
TCS Coding Sheet
Cognizant Coding Sheet
HCL Coding Sheet
Competitive Programming
DSA Cheat Sheets
Top 75 DSA Questions
Blind 75
DSA Sheet for Beginners
SDE Sheets
FAANG Coding Sheet
Love Babbar Sheet
Mass Recruiter Sheet
Product-Based Coding Sheet
Competitive Programming
System Design
System Design Tutorial
Software Design Patterns
System Design Roadmap
Top 10 System Design Interview Questions
Interview Corner
Company Preparation
Top Topics
Practice Company Questions
Interview Experiences
Experienced Interviews
Internship Interviews
Competitive Programming
Multiple Choice Quizzes
Aptitude for Placements
Puzzles for Interviews
Languages
Java
C++
R Tutorial
C
C#
SQL
Perl
Go Language
Web Development
HTML
CSS
JavaScript
TypeScript
ReactJS
NextJS
Node.js
PHP
100 Days of Web Development
CS Subjects
Engineering Mathematics
Operating System
DBMS
Computer Networks
Computer Organization and Architecture
Theory of Computation
Compiler Design
Digital Logic
Software Engineering
DevOps And Linux
DevOps Tutorial
GIT
AWS
Kubernetes
Docker
Microsoft Azure Tutorial
Google Cloud Platform
DevOps Roadmap
DevOps Interview Questions
Linux
School Learning
Mathematics
Class 8 Study Material
Class 9 Study Material
Class 10 Study Material
Class 11 Study Material
Class 12 Study Material
English Grammar
GfG School
Commerce
GATE
GATE Computer Science Notes
Last Minute Notes
GATE CS Solved Papers
GATE CS Original Papers and Official Keys
GATE CS 2025 Syllabus
GATE DA 2025 Syllabus
Other CS Exams
ISRO
UGC NET
GeeksforGeeks Videos
Data Science
Python Tutorial
R Tutorial
Machine Learning
ML Tutorial
ML Projects
100 Days of Machine Learning
Data Science using Python
Data Science using R
Data Science Packages
Pandas Tutorial
NumPy Tutorial
Data Visualization
Python Data Visualization with Python
Matplotlib Tutorial
Bokeh Tutorial
Plotly Tutorial
Data Visualization with R
Data Analysis
Data Analysis with Python
Data Analysis with R
100 Days of Data Analytics
Deep Learning
Deep Learning Tutorial
Deep Learning Projects
NLP Tutorial
Computer Vision
Computer Vision Tutorial
Computer Vision Projects
Interview Corner
Machine Learning Interview Question
Deep Learning Interview Question
NLP Interview Question
Python Interview Questions
Top 50 R Interview Questions
Practice
All DSA Problems
Problem of the Day
GFG SDE Sheet
Curated DSA Lists
Beginner's DSA Sheet
Love Babbar Sheet
Top 50 Array Problems
Top 50 String Problems
Top 50 Tree Problems
Top 50 Graph Problems
Top 50 DP Problems
Notifications
All
View All
Notifications
Mark all as read
All
Unread
Read
You're all caught up!!
Open CV
scikit-image
pycairo
Pyglet
Python
Numpy
Pandas
Python Database
Data Analysis
ML Math
Machine Learning
NLP
Deep Learning
Deep Learning Interview Questions
ML Projects
ML Interview Questions
100 Days of Machine Learning
▲
Open In App
160 Days of DSA
Share Your Experiences
Python | Multiple Face Recognition using dlib
Python - Facial and hand recognition using MediaPipe Holistic
ML | Face Recognition Using PCA Implementation
Resize Multiple Images using OpenCV-Python
Speech Recognition Module Python
Face recognition using Artificial Intelligence
Realtime Distance Estimation Using OpenCV - Python
Emojify using Face Recognition with Machine Learning
Determine The Face Tilt Using OpenCV - Python
Traffic Signs Recognition using CNN and Keras in Python
Image Transformations using OpenCV in Python
Detect Cat Faces in Real-Time using Python-OpenCV
Image Recognition with Mobilenet
Reading an image in OpenCV using Python
Multiple Color Detection in Real-Time using Python-OpenCV
Handwritten Digit Recognition using Neural Network
ML | Implement Face recognition using k-NN with scikit-learn
How do facial recognition systems work?
Face Recognition with Local Binary Patterns (LBPs) and OpenCV
FaceMask Detection using TensorFlow in Python
DSA to Development
Course
Python | Multiple Face Recognition using dlib
Last Updated :
03 Jan, 2023
Summarize
Comments
Improve
Suggest changes
Like Article
Like
Save
Share
Report
Follow
This article aims to quickly build a Python face recognition program to easily train multiple images per person and get started with recognizing known faces in an image.
In this article, the code uses
ageitgey’s face_recognition API
for Python. This API is built using
dlib’s face recognition algorithms
and it allows the user to easily implement face detection, face recognition and even real-time face tracking in your projects or from the command line.
Library Installation:
At first, make sure the required libraries are installed on your computer.
pip install face_recognition Scikit-learn dlib docopt
If you want dlib to use
CUDA
on GPU, make sure
CUDA
and
cuDNN
are installed correctly then install dlib using pip. For detailed instructions for installation on different platforms, check out face_recognition’s
Installation Guide
.
Now, create a directory with the training images for each person in the below format. Make sure that you’ve enough training images (at least 5 for each person) otherwise
Support Vector Classifier (SVC)
(that is used in this program – produces meaningless results on very small datasets.
File structure:
face_recognize.py
test_image.jpg
train_dir/
    person_1/
        person_1_face-1.jpg
        person_1_face-2.jpg
        .
        .
        person_1_face-n.jpg
    person_2/
        person_2_face-1.jpg
        person_2_face-2.jpg
        .
        .
        person_2_face-n.jpg
    .
    .
    person_n/
        person_n_face-1.jpg
        person_n_face-2.jpg
        .
        .
        person_n_face-n.jpg
Face Encoding:
The face_recognition API generates face encodings for the face found in the images. A face encoding is basically a way to represent the face using a set of
128
computer-generated measurements. Two different pictures of the same person would have similar encoding and two different people would have totally different encoding.
After all the face encodings are generated, Support Vector Classifier (SVC) with scikit-learn is trained on the face encodings along with their labels from all the known faces in the training directory. Finally, the API detects all the faces in the test image you provide and the trained SVC predicts all the known faces in the test image.
Code : To recognize multiple faces.
"""
Usage:
face_recognize.py -d <train_dir> -i <test_image>
Options:
-h, --help                     Show this help
-d, --train_dir =<train_dir>   Directory with
images for training
-i, --test_image =<test_image> Test image
"""
# importing libraries
import
face_recognition
import
docopt
from
sklearn
import
svm
import
os
def
face_recognize(
dir
, test):
# Training the SVC classifier
# The training data would be all the
# face encodings from all the known
# images and the labels are their names
encodings
=
[]
names
=
[]
# Training directory
if
dir
[
-
1
]!
=
'/'
:
dir
+
=
'/'
train_dir
=
os.listdir(
dir
)
# Loop through each person in the training directory
for
person
in
train_dir:
pix
=
os.listdir(
dir
+
person)
# Loop through each training image for the current person
for
person_img
in
pix:
# Get the face encodings for the face in each image file
face
=
face_recognition.load_image_file(
dir
+
person
+
"/"
+
person_img)
face_bounding_boxes
=
face_recognition.face_locations(face)
# If training image contains exactly one face
if
len
(face_bounding_boxes)
=
=
1
:
face_enc
=
face_recognition.face_encodings(face)[
0
]
# Add face encoding for current image
# with corresponding label (name) to the training data
encodings.append(face_enc)
names.append(person)
else
:
print
(person
+
"/"
+
person_img
+
" can't be used for training"
)
# Create and train the SVC classifier
clf
=
svm.SVC(gamma
=
'scale'
)
clf.fit(encodings, names)
# Load the test image with unknown faces into a numpy array
test_image
=
face_recognition.load_image_file(test)
# Find all the faces in the test image using the default HOG-based model
face_locations
=
face_recognition.face_locations(test_image)
no
=
len
(face_locations)
print
(
"Number of faces detected: "
, no)
# Predict all the faces in the test image using the trained classifier
print
(
"Found:"
)
for
i
in
range
(no):
test_image_enc
=
face_recognition.face_encodings(test_image)[i]
name
=
clf.predict([test_image_enc])
print
(
*
name)
def
main():
args
=
docopt.docopt(__doc__)
train_dir
=
args[
"--train_dir"
]
test_image
=
args[
"--test_image"
]
face_recognize(train_dir, test_image)
if
__name__
=
=
"__main__"
:
main()
How to run it on the terminal:
python face_recognize.py -d train_dir -i test_image.jpg
Output:
Comment
More info
Next Article
Python - Facial and hand recognition using MediaPipe Holistic
A
anandbaburajan
Follow
Improve
Similar Reads
OpenCV - Facial Landmarks and Face Detection using dlib and OpenCV
Content has been removed on Author's request.
1 min read
A Complete Guide to Face Detection and Face Recognition in 2024
Face detection and face recognition have become fundamental technologies in various applications ranging from security systems and mobile authentication to social media tagging and customer analytics. With advancements in artificial intelligence, deep learning, and computer vision, the accuracy and efficiency of these systems have significantly imp
9 min read
ML | Implement Face recognition using k-NN with scikit-learn
k-Nearest Neighbors: k-NN is one of the most basic classification algorithms in machine learning. It belongs to the supervised learning category of machine learning. k-NN is often used in search applications where you are looking for “similar” items. The way we measure similarity is by creating a vector representation of the items, and then compare
5 min read
ML | Face Recognition Using PCA Implementation
Face Recognition is one of the most popular and controversial tasks of computer vision. One of the most important milestones is achieved using This approach was first developed by Sirovich and Kirby in 1987 and first used by Turk and Alex Pentland in face classification in 1991. It is easy to implement and thus used in many early face recognition a
6 min read
Face recognition using Artificial Intelligence
The current technology amazes people with amazing innovations that not only make life simple but also bearable. Face recognition has over time proven to be the least intrusive and fastest form of biometric verification. The software uses deep learning algorithms to compare a live captured image to the stored face print to verify one's identity. Ima
15+ min read
Emojify using Face Recognition with Machine Learning
In this article, we will learn how to implement a modification app that will show an emoji of expression which resembles the expression on your face. This is a fun project based on computer vision in which we use an image classification model in reality to classify different expressions of a person. This project will be implemented in two parts: Bu
7 min read
Yawn Detection using OpenCV and Dlib
In this article, we'll cover all the steps required to build a Yawn detection program using OpenCV and dlib packages. But before doing this project should be familiar with the basics of OpenCV and you should also know how to use face detection and landmark detection using dlib module. Requirements: Dlib library installed Dlib face landmark '.dat' f
2 min read
Eye blink detection with OpenCV, Python, and dlib
In this article, we are going to see how to detect eye blink using OpenCV, Python, and dlib. This is a fairly simple task and it requires you to have a basic understanding of OpenCV and how to implement face landmark detection programs using OpenCV and dlib, since we'll be using that as the base for today's project. Stepwise ImplementationStep 1: I
6 min read
Face Recognition with Local Binary Patterns (LBPs) and OpenCV
In this article, Face Recognition with Local Binary Patterns (LBPs) and OpenCV is discussed. Let's start with understanding the logic behind performing face recognition using LBPs. A beginner-friendly explanation of LBPs is described below. Local Binary Patterns (LBP)LBP stands for Local Binary Patterns. It's a technique used to describe the textur
13 min read
Dataset for Face Recognition
Face recognition is a rapidly evolving field within computer vision, with applications spanning security, social media, and personalized user experiences. A key component of developing effective face recognition systems is access to high-quality datasets. These datasets provide the foundation for training machine learning models, evaluating their p
5 min read
Face detection using Cascade Classifier using OpenCV-Python
In this article, we are going to see how to detect faces using a cascade classifier in OpenCV Python. Face detection has much significance in different fields of today's world. It is a significant step in several applications, face recognition (also used as biometrics), photography (for auto-focus on the face), face analysis (age, gender, emotion r
4 min read
Face Detection using Python and OpenCV with webcam
OpenCV is a Library which is used to carry out image processing using programming languages like python. This project utilizes OpenCV Library to make a Real-Time Face Detection using your webcam as a primary camera.Following are the requirements for it:- Python 2.7OpenCVNumpyHaar Cascade Frontal face classifiers Approach/Algorithms used: This proje
4 min read
Face and Hand Landmarks Detection using Python - Mediapipe, OpenCV
In this article, we will use mediapipe python library to detect face and hand landmarks. We will be using a Holistic model from mediapipe solutions to detect all the face and hand landmarks. We will be also seeing how we can access different landmarks of the face and hands which can be used for different computer vision applications such as sign la
4 min read
Determine The Face Tilt Using OpenCV - Python
In this article, we are going to see how to determine the face tilt using OpenCV in Python. To achieve this we will be using a popular computer vision library opencv-python. In this program with the help of the OpenCV library, we will detect faces in a live stream from a webcam or a video file and subsequently also determine the angle by how much t
4 min read
Python - Facial and hand recognition using MediaPipe Holistic
What is MediaPipe: Object Detection is one of the leading and most popular use cases in the domain of computer vision. Several object detection models are used worldwide for their particular use case applications. Many of these models have been used as an independent solution to a single computer vision task with its own fixed application. Combinin
4 min read
Traffic Signs Recognition using CNN and Keras in Python
We always come across incidents of accidents where drivers' Overspeed or lack of vision leads to major accidents. In winter, the risk of road accidents has a 40-50% increase because of the traffic signs' lack of visibility. So here in this article, we will be implementing Traffic Sign recognition using a Convolutional Neural Network. It will be ver
6 min read
Sign Language Recognition System using TensorFlow in Python
The first step of any machine learning problem is finding the appropriate dataset. For Sign language recognition let's use the Sign Language MNIST dataset. It has images of signs corresponding to each alphabet in the English language. Since the sign language of J and Z requires motion, those two classes are not available in the dataset. Importing L
4 min read
Face Detection in Flutter using Firebase ML Kit
Face detection is a technique by which we can locate the human faces in the image given. Face detection is used in many places nowadays, especially websites hosting images like Picasa, Photobucket, and Facebook. The automatic tagging feature adds a new dimension to sharing pictures among the people who are in the picture and also gives the idea to
5 min read
How to create a Face Detection Android App using Machine Learning KIT on Firebase
Pre-requisites: Firebase Machine Learning kitAdding Firebase to Android AppFirebase ML KIT aims to make machine learning more accessible, by providing a range of pre-trained models that can use in the iOS and Android apps. Let's use ML Kit’s Face Detection API which will identify faces in photos. By the end of this article, we’ll have an app that c
9 min read
Person and Face Detection using Intel OpenVINO toolkit
The OpenVINO Toolkit by Intel is a robust platform aimed at assisting developers in speeding up the implementation of deep learning models for computer vision activities. It enhances models for Intel hardware, such as CPUs, GPUs, VPUs, and FPGAs, enabling effective inference on edge devices. The toolkit is compatible with different deep learning fr
8 min read
Python - Face detection and sending notification
Nowadays python has become one of the most popular languages as well as favorite programming language among developers. The simplified syntax and pattern of this language make the presence of this language in the trending list. The biggest strength of Python is a huge collection of standard library which can be used for the following: Machine Learn
4 min read
Face Alignment with OpenCV and Python
Face Alignment is the technique in which the image of the person is rotated according to the angle of the eyes. This technique is actually used as a part of the pipeline process in which facial detection is done using the image. This implementation of face alignment can be easily done with the help of python module cv2(computer vision). It has so m
6 min read
Opencv Python program for Face Detection
The objective of the program given is to detect object of interest(face) in real time and to keep tracking of the same object.This is a simple example of how to detect face in Python. You can try to use training samples of any other object of your choice to be detected by training the classifier on required objects. Here is the steps to download th
2 min read
Human Activity Recognition - Using Deep Learning Model
Human activity recognition using smartphone sensors like accelerometer is one of the hectic topics of research. HAR is one of the time series classification problem. In this project various machine learning and deep learning models have been worked out to get the best final result. In the same sequence, we can use LSTM (long short term memory) mode
6 min read
Flower Recognition Using Convolutional Neural Network
In this article, we will use Convolutional Neural Network to solve a Supervised Image Classification problem of recognizing the flower types - rose, chamomile, dandelion, sunflower, & tulip. Understanding the concept of a Convolutional Neural Network refers to this. Once, understand the concept of CNN we can start with the project. Steps to be
4 min read
Image Recognition using TensorFlow
In this article, we'll create an image recognition model using TensorFlow and Keras. TensorFlow is a robust deep learning framework, and Keras is a high-level API(Application Programming Interface) that provides a modular, easy-to-use, and organized interface to solve real-life deep learning problems. Image Recognition: In Image recognition, we inp
6 min read
Optical Character Recognition using TensorFlow
Optical Character Recognition (OCR) stands as a transformative force, bridging the gap between the physical and digital worlds. OCR enables machines to interpret and convert printed or handwritten text into machine-readable data, revolutionizing how we interact with information. This article explores the powerful capabilities of OCR and presents a
8 min read
Project Idea | (Dynamic Hand Gesture Recognition using neural network)
Introduction Hand gesture recognition system is used for interfacing between computer and human using hand gesture. We wish to make a windows-based application for live motion gesture recognition using webcam input in C++. This project is a combination of live motion detection and gesture identification. This application uses the webcam to detect g
3 min read
Optical Character Recognition (Ocr) Using R
OCR transforms text images into machine-readable formats. With applications ranging from receipts to license plates, we explore the process, syntax, and examples, demonstrating its versatility. In this tutorial, we will learn to perform Optical Character Recognition in R programming language using the Tesseract and Magick libraries. Optical Charact
5 min read
Automatic Speech Recognition using Whisper
Automatic Speech Recognition (ASR) can be simplified as artificial intelligence transforming spoken language into text. Its historical journey dates back to a time when developing ASR posed significant challenges. Addressing diverse factors such as variations in voices, accents, background noise, and speech patterns proved to be formidable obstacle
10 min read
Article Tags :
AI-ML-DS
Computer Vision
Technical Scripter
AI-ML-DS With Python
Python-OpenCV
Technical Scripter 2019
+2 More
Like
344k+ interested Geeks
Complete Machine Learning & Data Science Program
Explore
227k+ interested Geeks
Free Python Course with Certificate - Updated [August 2024]
Explore
230k+ interested Geeks
Python Full Course Online - Complete Beginner to Advanced
Explore
Explore More
Corporate & Communications Address:- A-143, 7th Floor, Sovereign Corporate Tower, Sector- 136, Noida, Uttar Pradesh (201305) | Registered Address:- K 061, Tower K, Gulshan Vivante Apartment, Sector 137, Noida, Gautam Buddh Nagar, Uttar Pradesh, 201305
Company
About Us
Legal
Careers
In Media
Contact Us
Advertise with us
GFG Corporate Solution
Placement Training Program
Explore
Job-A-Thon Hiring Challenge
Hack-A-Thon
GfG Weekly Contest
Offline Classes (Delhi/NCR)
DSA in JAVA/C++
Master System Design
Master CP
GeeksforGeeks Videos
Geeks Community
Languages
Python
Java
C++
PHP
GoLang
SQL
R Language
Android Tutorial
DSA
Data Structures
Algorithms
DSA for Beginners
Basic DSA Problems
DSA Roadmap
DSA Interview Questions
Competitive Programming
Data Science & ML
Data Science With Python
Data Science For Beginner
Machine Learning
ML Maths
Data Visualisation
Pandas
NumPy
NLP
Deep Learning
Web Technologies
HTML
CSS
JavaScript
TypeScript
ReactJS
NextJS
NodeJs
Bootstrap
Tailwind CSS
Python Tutorial
Python Programming Examples
Django Tutorial
Python Projects
Python Tkinter
Web Scraping
OpenCV Tutorial
Python Interview Question
Computer Science
GATE CS Notes
Operating Systems
Computer Network
Database Management System
Software Engineering
Digital Logic Design
Engineering Maths
DevOps
Git
AWS
Docker
Kubernetes
Azure
GCP
DevOps Roadmap
System Design
High Level Design
Low Level Design
UML Diagrams
Interview Guide
Design Patterns
OOAD
System Design Bootcamp
Interview Questions
School Subjects
Mathematics
Physics
Chemistry
Biology
Social Science
English Grammar
Commerce
Accountancy
Business Studies
Economics
Management
HR Management
Finance
Income Tax
Databases
SQL
MYSQL
PostgreSQL
PL/SQL
MongoDB
Preparation Corner
Company-Wise Recruitment Process
Resume Templates
Aptitude Preparation
Puzzles
Company-Wise Preparation
Companies
Colleges
Competitive Exams
JEE Advanced
UGC NET
UPSC
SSC CGL
SBI PO
SBI Clerk
IBPS PO
IBPS Clerk
More Tutorials
Software Development
Software Testing
Product Management
Project Management
Linux
Excel
All Cheat Sheets
Recent Articles
Free Online Tools
Typing Test
Image Editor
Code Formatters
Code Converters
Currency Converter
Random Number Generator
Random Password Generator
Write & Earn
Write an Article
Improve an Article
Pick Topics to Write
Share your Experiences
Internships
DSA/Placements
DSA - Self Paced Course
DSA in JavaScript - Self Paced Course
DSA in Python - Self Paced
C Programming Course Online - Learn C with Data Structures
Complete Interview Preparation
Master Competitive Programming
Core CS Subject for Interview Preparation
Mastering System Design: LLD to HLD
Tech Interview 101 - From DSA to System Design [LIVE]
DSA to Development [HYBRID]
Placement Preparation Crash Course [LIVE]
Development/Testing
JavaScript Full Course
React JS Course
React Native Course
Django Web Development Course
Complete Bootstrap Course
Full Stack Development - [LIVE]
JAVA Backend Development - [LIVE]
Complete Software Testing Course [LIVE]
Android Mastery with Kotlin [LIVE]
Machine Learning/Data Science
Complete Machine Learning & Data Science Program - [LIVE]
Data Analytics Training using Excel, SQL, Python & PowerBI - [LIVE]
Data Science Training Program - [LIVE]
Mastering Generative AI and ChatGPT
Data Science Course with IBM Certification
Programming Languages
C Programming with Data Structures
C++ Programming Course
Java Programming Course
Python Full Course
Clouds/Devops
DevOps Engineering
AWS Solutions Architect Certification
Salesforce Certified Administrator Course
GATE
GATE CS & IT Test Series - 2025
GATE DA Test Series 2025
GATE CS & IT Course - 2025
GATE DA Course 2025
@GeeksforGeeks, Sanchhaya Education Private Limited
,
All rights reserved
We use cookies to ensure you have the best browsing experience on our website. By using our site, you
        acknowledge that you have read and understood our
Cookie Policy
&
Privacy Policy
Got It !
Improvement
Suggest changes
Suggest Changes
Help us improve. Share your suggestions to enhance the article. Contribute your expertise and make a difference in the GeeksforGeeks portal.
Create Improvement
Enhance the article with your expertise. Contribute to the GeeksforGeeks community and help create better learning resources for all.
Suggest Changes
min 4 words, max CharLimit:2000
What kind of Experience do you want to share?
Interview Experiences
Admission Experiences
Career Journeys
Work Experiences
Campus Experiences
Competitive Exam Experiences